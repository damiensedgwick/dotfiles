{
  // Editor
  "editor.minimap.enabled": false,
  "editor.fontFamily": "ComicShannsMono Nerd Font",
  "editor.fontSize": 18,
  "editor.lineHeight": 1.5,
  "editor.rulers": [
    80,
    100
  ],
  "editor.formatOnSave": true,
  "editor.inlineSuggest.enabled": true,
  // Emmet
  "emmet.triggerExpansionOnTab": true,
  // Extensions
  "extensions.ignoreRecommendations": true,
  // Formatting and Linting
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // Git
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.openRepositoryInParentFolders": "never",
  // Terminal
  "terminal.integrated.fontFamily": "ComicShannsMono Nerd Font",
  "terminal.integrated.fontSize": 18,
  "terminal.integrated.lineHeight": 1.5,
  // TypeScript
  "typescript.updateImportsOnFileMove.enabled": "always",
  // Vim
  "vim.leader": "<Space>",
  "vim.hlsearch": true,
  "vim.smartRelativeLine": true,
  "vim.normalModeKeyBindings": [
    // buffers
    {
      "before": [
        "S-h"
      ],
      "commands": [
        ":bprevious"
      ]
    },
    {
      "before": [
        "S-l"
      ],
      "commands": [
        ":bnext"
      ]
    },
    // splits
    {
      "before": [
        "leader",
        "v"
      ],
      "commands": [
        ":vsplit"
      ]
    },
    {
      "before": [
        "leader",
        "s"
      ],
      "commands": [
        ":split"
      ]
    },
    // panes
    {
      "before": [
        "leader",
        "h"
      ],
      "commands": [
        "workbench.action.focusLeftGroup"
      ]
    },
    {
      "before": [
        "leader",
        "j"
      ],
      "commands": [
        "workbench.action.focusBelowGroup"
      ]
    },
    {
      "before": [
        "leader",
        "k"
      ],
      "commands": [
        "workbench.action.focusAboveGroup"
      ]
    },
    {
      "before": [
        "leader",
        "l"
      ],
      "commands": [
        "workbench.action.focusRightGroup"
      ]
    },
    // file tree
    {
      "before": [
        "leader",
        "n",
        "e"
      ],
      "commands": [
        "workbench.explorer.fileView.focus"
      ]
    },
    // a lil something extra
    {
      "before": [
        "leader",
        "w"
      ],
      "commands": [
        ":w!"
      ]
    },
    {
      "before": [
        "[",
        "d"
      ],
      "commands": [
        "editor.action.marker.prev"
      ]
    },
    {
      "before": [
        "]",
        "d"
      ],
      "commands": [
        "editor.action.marker.next"
      ]
    },
    {
      "before": [
        "<leader>",
        "c",
        "a"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    {
      "before": [
        "leader",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "leader",
        "p"
      ],
      "commands": [
        "editor.action.formatDocument"
      ]
    },
    {
      "before": [
        "g",
        "h"
      ],
      "commands": [
        "editor.action.showDefinitionPreviewHover"
      ]
    }
  ],
  "vim.visualModeKeyBindings": [
    // Stay in visual mode while indenting
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    // Move selected lines while staying in visual mode
    {
      "before": [
        "J"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
    // toggle comment selection
    {
      "before": [
        "leader",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    }
  ],
  // Window
  "window.restoreWindows": "none",
  // Workbench
  "workbench.startupEditor": "none",
  "workbench.settings.editor": "json",
  // Zig
  "remote.defaultExtensionsIfInstalledLocally": [
    "GitHub.copilot",
    "GitHub.copilot-chat",
    "GitHub.vscode-pull-request-github"
  ]
}
